{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","s","profile","description","src","alt","name","Object","entries","map","item","word","labelValue","quantityValue","statsItem","label","slice","toUpperCase","quantity","toLocaleString","App","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,UAAY,2BAA2B,MAAQ,uBAAuB,SAAW,4B,4IC0C/TC,EApCC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAClD,OACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,sBAAKF,UAAWC,IAAEE,YAAlB,UACE,qBAAKC,IAAKN,EAAQO,IAAG,UAAKV,EAAL,WAAwBK,UAAWC,IAAEH,SAC1D,mBAAGE,UAAWC,IAAEK,KAAhB,SAAuBX,IACvB,oBAAGK,UAAWC,IAAEL,IAAhB,cAAuBA,KACvB,mBAAGI,UAAWC,IAAEJ,SAAhB,SAA2BA,OAE7B,oBAAIG,UAAWC,IAAEF,MAAjB,SACGQ,OAAOC,QAAQT,GAAOU,KAAI,SAAAC,GACzB,IAfSC,EAeT,cAAoCD,EAApC,GAAOE,EAAP,KAAmBC,EAAnB,KACA,OACE,qBAAIb,UAAWC,IAAEa,UAAjB,UACE,sBAAMd,UAAWC,IAAEc,MAAnB,UAlBKJ,EAkBiCC,EAjB3CD,EAAKK,MAAM,EAAG,GAAGC,cAAgBN,EAAKK,MAAM,MAkBvC,sBAAMhB,UAAWC,IAAEiB,SAAnB,SAA8BL,EAAcM,qBAFbP,Y,OCS9BQ,MA1Bf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,CACEL,SAAU0B,EAAK1B,SACfC,IAAKyB,EAAKzB,IACVC,SAAUwB,EAAKxB,SACfC,OAAQuB,EAAKvB,OACbC,MAAOsB,EAAKtB,WCCLuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b0eb6e1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2MP2b\",\"description\":\"Profile_description__1-bq5\",\"avatar\":\"Profile_avatar__Ujv33\",\"name\":\"Profile_name__Wn3j1\",\"tag\":\"Profile_tag__DdtVn\",\"location\":\"Profile_location__1oukt\",\"stats\":\"Profile_stats__3OBC3\",\"statsItem\":\"Profile_statsItem__kEyKw\",\"label\":\"Profile_label__3TyR7\",\"quantity\":\"Profile_quantity__xYaIK\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst capitalize = word => {\n  return word.slice(0, 1).toUpperCase() + word.slice(1);\n};\n\nconst Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={`${username} avatar`} className={s.avatar} />\n        <p className={s.name}>{username}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n      <ul className={s.stats}>\n        {Object.entries(stats).map(item => {\n          const [labelValue, quantityValue] = item;\n          return (\n            <li className={s.statsItem} key={labelValue}>\n              <span className={s.label}>{capitalize(labelValue)}</span>\n              <span className={s.quantity}>{quantityValue.toLocaleString()}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Profile;\n","import Profile from './components/Profile';\nimport user from './components/Profile/user.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Hello React!!!</p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}