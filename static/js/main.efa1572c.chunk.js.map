{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/TransactionTableRow/TransactionTableRow.module.css","components/ProfileStats/ProfileStats.module.css","components/StatsItem/StatsItem.module.css","components/FriendList/FriendList.module.css","components/capitalize.js","components/ProfileStats/ProfileStats.js","components/Profile/Profile.js","components/StatsItem/StatsItem.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionTableRow/TransactionTableRow.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","capitalize","word","slice","toUpperCase","ProfileStats","label","quantity","className","s","toLocaleString","Profile","username","tag","location","avatar","stats","profile","description","src","alt","name","Object","entries","map","statsItem","StatsItem","percentage","Statistics","title","statistics","statList","id","item","style","backgroundColor","Math","random","toString","substr","FriendListItem","isOnline","isOffline","width","FriendList","friends","friendList","TransactionTableRow","type","amount","currency","row","data","TransactionHistory","items","transactionHistory","headRow","headCell","App","user","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efa1572c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2MP2b\",\"description\":\"Profile_description__1-bq5\",\"avatar\":\"Profile_avatar__Ujv33\",\"name\":\"Profile_name__Wn3j1\",\"tag\":\"Profile_tag__DdtVn\",\"location\":\"Profile_location__1oukt\",\"stats\":\"Profile_stats__3OBC3\",\"statsItem\":\"Profile_statsItem__kEyKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3eHr9\",\"statusIndicator\":\"FriendListItem_statusIndicator__2vFI-\",\"isOnline\":\"FriendListItem_isOnline__2PwQw FriendListItem_statusIndicator__2vFI-\",\"isOffline\":\"FriendListItem_isOffline__Og9gr FriendListItem_statusIndicator__2vFI-\",\"avatar\":\"FriendListItem_avatar__3-knN\",\"name\":\"FriendListItem_name__2efqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3k2CW\",\"headRow\":\"TransactionHistory_headRow__3mmlv\",\"headCell\":\"TransactionHistory_headCell__RNHyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2KTu4\",\"title\":\"Statistics_title__B4wKD\",\"statList\":\"Statistics_statList___8R1F\",\"item\":\"Statistics_item__1wZNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TransactionTableRow_row__ERDkH\",\"data\":\"TransactionTableRow_data__21WLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ProfileStats_label__GE26C\",\"quantity\":\"ProfileStats_quantity__2ye7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"StatsItem_label__kAs5m\",\"percentage\":\"StatsItem_percentage__38cyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1_Y8l\"};","const capitalize = word => {\n  return word.slice(0, 1).toUpperCase() + word.slice(1);\n};\n\nexport default capitalize;\n","import PropTypes from 'prop-types';\nimport s from './ProfileStats.module.css';\nimport capitalize from '../capitalize';\n\nconst ProfileStats = ({ label, quantity }) => {\n  return (\n    <>\n      <span className={s.label}>{capitalize(label)}</span>\n      <span className={s.quantity}>{quantity.toLocaleString()}</span>\n    </>\n  );\n};\n\nProfileStats.propTypes = {\n  label: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n\nexport default ProfileStats;\n","import PropTypes from 'prop-types';\nimport ProfileStats from '../ProfileStats';\nimport s from './Profile.module.css';\n\nconst Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={`${username} avatar`} className={s.avatar} />\n        <p className={s.name}>{username}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n      <ul className={s.stats}>\n        {Object.entries(stats).map(([label, quantity]) => {\n          return (\n            <li className={s.statsItem} key={label}>\n              <ProfileStats label={label} quantity={quantity} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './StatsItem.module.css';\n\nconst StatsItem = ({ label, percentage }) => {\n  return (\n    <>\n      <span className={s.label}>{label}</span>\n      <span className={s.percentage}>{percentage}%</span>\n    </>\n  );\n};\n\nStatsItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default StatsItem;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport StatsItem from '../StatsItem';\n\nconst getRandomColor = () => {\n  return '#' + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title.toUpperCase()}</h2>}\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <li className={s.item} style={{ backgroundColor: getRandomColor() }} key={id}>\n              <StatsItem label={label} percentage={percentage} />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired })),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={s.item}>\n      <span className={isOnline ? s.isOnline : s.isOffline}></span>\n      <img className={s.avatar} src={avatar} alt={`${name} avatar`} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\nimport FriendListItem from '../FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ avatar, name, isOnline, id }) => {\n        return (\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} key={id.toString()} />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number.isRequired })),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionTableRow.module.css';\n\nconst TransactionTableRow = ({ type, amount, currency }) => {\n  return (\n    <tr className={s.row}>\n      <td className={s.data}>{type}</td>\n      <td className={s.data}>{amount}</td>\n      <td className={s.data}>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionTableRow.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionTableRow;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\nimport TransactionTableRow from '../TransactionTableRow';\nimport capitalize from '../capitalize';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead className={s.headRow}>\n        <tr>\n          <th className={s.headCell}>Type</th>\n          <th className={s.headCell}>Amount</th>\n          <th className={s.headCell}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <TransactionTableRow\n              type={capitalize(type)}\n              amount={amount}\n              currency={currency}\n              key={id}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired })),\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\nimport user from './db/user.json';\nimport data from './db/data.json';\nimport friends from './db/friends.json';\nimport transactions from './db/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}